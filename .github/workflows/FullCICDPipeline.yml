name: Full CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  backend-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
      - name: Maven Build
        working-directory: ./back
        run: mvn clean install

  backend-test:
    runs-on: ubuntu-latest
    needs: backend-build
    steps:
      - uses: actions/checkout@v3
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
      - name: Maven Test and JaCoCo Report
        working-directory: ./back
        run: mvn test jacoco:report
      - name: Generate JaCoCo Code Coverage Report
        uses: PavanMudigonda/jacoco-reporter@v5.0
        with:
          coverage_results_path: back/target/site/jacoco/jacoco.xml
          coverage_report_name: Back End - Spring Boot - Tests Coverage
          coverage_report_title: JaCoCo
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_below_threshold: false

  backend-analyze:
    runs-on: ubuntu-latest
    needs: backend-test
    steps:
      - uses: actions/checkout@v3
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2-
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
      - name: Maven Analyze on SonarCloud
        working-directory: ./back
        run: mvn clean verify sonar:sonar
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"

  frontend-test-sonarcloud-dockerhub:
    runs-on: ubuntu-latest
    needs: backend-test
    steps:
      - uses: actions/checkout@v3

      - name: Cache npm dependencies
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-

      - name: Use Node.js 18.x
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Dependencies and Run Tests
        working-directory: ./front
        run: npm ci && npm run test

      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./front/coverage/lcov.info
          flags: frontend
          name: codecov-frontend-report

      - name: Test Reporting
        uses: phoenix-actions/test-reporting@v14
        if: always()
        with:
          name: Front End Angular Tests Report
          path: 'front/test-results/*.xml'
          reporter: 'java-junit'

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: front
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Frontend Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ./front
          file: ./front/Dockerfile
          push: true
          tags: citizensyd/deliveryfit-frontend:latest

      - name: Logout from Docker Hub
        run: docker logout

